

#include <Servo.h>

Servo myservo1;
Servo myservo2;
Servo myservo3;


int a;
int b;
int c;
int d;

int pi = 3.14159265359;

int source_direction;
int possible_center_direction;

 
uint16_t threshold = 0;

uint8_t numberOfReadings = 100;


int ServoPin1 = 9;
int ServoPin2 = 10;
int ServoPin3 = 11;

int SoundInPin = A0;
int SoundInPin1 = A1;
int SoundInPin2 = A2;
int SoundInPin3 = A3;

void setup() {
  
 myservo1.attach(ServoPin1);
 myservo2.attach(ServoPin2);
 myservo3.attach(ServoPin3);

     pinMode(SoundInPin, INPUT);
     pinMode(SoundInPin1, INPUT);
     pinMode(SoundInPin2, INPUT);
     pinMode(SoundInPin3, INPUT);

         
  for (int i = 0; i < numberOfReadings; ++i)
  {
    threshold += analogRead(A0);
  }
  threshold /= numberOfReadings;
}

void loop() {
a = analogRead(A0);
b = analogRead(A1);
c = analogRead(A2);
d = analogRead(A3);

source_direction=atan2(a+b+(2*c)/(sqrt({3})*(a-b)*180/pi);
if(a>b){
   if(b>c){//a>b>c
     possible_center_direction=240; //A is closest, then B, last C
   }else if(a>c){//a>c>b
     possible_center_direction=180; //A is closest, then C last B
   }else{//c>a>b
     possible_center_direction=120; //C is closest, then A last B
   }
}else{
   if(c>b){//c>b>a
     possible_center_direction=60; //C is closest, then B, last A
   }else if(a>c){//b>a>c
     possible_center_direction=300; //B is closest, then A, last C
   }else{//b>c>a
     possible_center_direction=0; //B is closest, then C, last A
   }
}

//if the source is out of bounds, then rotate it by 180 degrees.
if((possible_center_direction+60)<source_direction){
  if(source_direction<(possible_center_direction-60)){
    source_direction=(source_direction+180)%360;
  }
}






/*
